export const COLLISION_BODIES = {
  // Bodies on which we want to add collision callback
  PLAYER: "player",
  HEALTH: "health",
  PATH: "path",
  WALL: "wall",
  SIDEWALL: "sidewall",
  CENTERRAMP: "centerramp",
  ENDRAMP: "endramp",
  SPINNER: "spinner",
  GEM: "gem",
  OBSTACLE: "obstacle",
  SCOREBOX: "scorebox",
};

export const WINBOX_PROPS = [
  //FRONT WALL
  {
    isFrontWall: true,
    positionZ: 2.5,
    positionY: 0,
    color: 0xff0000,
    positionX: -8,
    score: "1X",
    rotationY: 0,
    rotationX: 0,
  },
  {
    isFrontWall: true,
    positionZ: 2.5,
    positionY: 0,
    color: 0xfff44f,
    positionX: -4,
    score: "3X",
    rotationY: 0,
    rotationX: 0,
  },
  {
    isFrontWall: true,
    positionZ: 2.5,
    positionY: 0,
    color: 0x74b72e,
    positionX: 0,
    score: "5X",
    rotationY: 0,
    rotationX: 0,
  },
  {
    isFrontWall: true,
    positionZ: 2.5,
    positionY: 0,
    color: 0xfff44f,
    positionX: 4,
    score: "3X",
    rotationY: 0,
    rotationX: 0,
  },
  {
    isFrontWall: true,
    positionZ: 2.5,
    positionY: 0,
    color: 0xff0000,
    positionX: 8,
    score: "1X",
    rotationY: 0,
    rotationX: 0,
  },
  //BEHIND WALL
  {
    isFrontWall: false,
    positionZ: -1.5,
    positionY: 0,
    color: 0xff0000,
    positionX: -8,
    score: "1X",
    rotationY: 0,
    rotationX: 0,
  },
  {
    isFrontWall: false,
    positionZ: -1.5,
    positionY: 0,
    color: 0xfff44f,
    positionX: -4,
    score: "3X",
    rotationY: 0,
    rotationX: 0,
  },
  {
    isFrontWall: false,
    positionZ: -1.5,
    positionY: 0,
    color: 0x74b72e,
    positionX: 0,
    score: "5X",
    rotationY: 0,
    rotationX: 0,
  },
  {
    isFrontWall: false,
    positionZ: -1.5,
    positionY: 0,
    color: 0xfff44f,
    positionX: 4,
    score: "3X",
    rotationY: 0,
    rotationX: 0,
  },
  {
    isFrontWall: false,
    positionZ: -1.5,
    positionY: 0,
    color: 0xff0000,
    positionX: 8,
    score: "1X",
    rotationY: 0,
    rotationX: 0,
  },

  //LEFT WALL
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: 0,
    color: 0xff0000,
    positionX: -10,
    score: "1X",
    rotationY: Math.PI / 2,
    rotationX: 0,
  },
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: 0,
    color: 0xfff44f,
    positionX: -6,
    score: "3X",
    rotationY: Math.PI / 2,
    rotationX: 0,
  },
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: 0,
    color: 0x74b72e,
    positionX: -2,
    score: "5X",
    rotationY: Math.PI / 2,
    rotationX: 0,
  },
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: 0,
    color: 0xfff44f,
    positionX: 2,
    score: "3X",
    rotationY: Math.PI / 2,
    rotationX: 0,
  },
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: 0,
    color: 0xff0000,
    positionX: 6,
    score: "1X",
    rotationY: Math.PI / 2,
    rotationX: 0,
  },

  //RIGHT WALL
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: 0,
    color: 0xff0000,
    positionX: -6,
    score: "1X",
    rotationY: Math.PI / 2,
    rotationX: 0,
  },
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: 0,
    color: 0xfff44f,
    positionX: -2,
    score: "3X",
    rotationY: Math.PI / 2,
    rotationX: 0,
  },
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: 0,
    color: 0x74b72e,
    positionX: 2,
    score: "5X",
    rotationY: Math.PI / 2,
    rotationX: 0,
  },
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: 0,
    color: 0xfff44f,
    positionX: 6,
    score: "3X",
    rotationY: Math.PI / 2,
    rotationX: 0,
  },
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: 0,
    color: 0xff0000,
    positionX: 10,
    score: "1X",
    rotationY: Math.PI / 2,
    rotationX: 0,
  },

  //BOTTOM WALL
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: -1.5,
    color: 0xff0000,
    positionX: -8,
    score: "1X",
    rotationY: 0,
    rotationX: Math.PI / 2,
  },
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: -1.5,
    color: 0xfff44f,
    positionX: -4,
    score: "3X",
    rotationY: 0,
    rotationX: Math.PI / 2,
  },
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: -1.5,
    color: 0x74b72e,
    positionX: 0,
    score: "5X",
    rotationY: 0,
    rotationX: Math.PI / 2,
  },
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: -1.5,
    color: 0xfff44f,
    positionX: 4,
    score: "3X",
    rotationY: 0,
    rotationX: Math.PI / 2,
  },
  {
    isFrontWall: false,
    positionZ: 0.5,
    positionY: -1.5,
    color: 0xff0000,
    positionX: 8,
    score: "1X",
    rotationY: 0,
    rotationX: Math.PI / 2,
  },
];
